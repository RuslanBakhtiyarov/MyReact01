{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/Shipment.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","components/Burger.js","sample-burgers.js","base.js","components/Auth/Login.js","components/Auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","display","toggleDisplay","setTitle","setUrl","className","onClick","map","restaurant","getTitle","key","history","push","Header","Shipment","total","this","shipping","shippingNeon","React","Component","Order","renderOrder","burger","burgers","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","deleteFromOrder","orderIds","Object","keys","reduce","prevTotal","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","current","value","parseFloat","desc","image","addBurger","currentTarget","reset","onSubmit","ref","type","placeholder","autoComplete","EditBurgerForm","handleChange","updatedBurger","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handleLogout","loadSampleBurgers","Burger","details","disabled","addToOrder","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SignIn","authProvider","signInWithPopup","then","children","App","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.977d1d08.chunk.js","sourcesContent":["// Наши рестораны\nconst restaurants = [\n  {\n    title: 'Hot Burger Тверская',\n    url: 'hot-burger-tverskaya',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Маросейка',\n    url: 'hot-burger-maroseyka',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Петровка',\n    url: 'hot-burger-petrovka',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport restaurants from '../sample-restaurants';\n\nconst Landing = props => {\n  const [display, toggleDisplay] = useState(false);\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n\n  const displayList = () => {\n    toggleDisplay(!display);\n  };\n\n  const getTitle = restaurant => {\n    const { title, url } = restaurant;\n    setTitle(title);\n    setUrl(url);\n    toggleDisplay(false);\n  };\n\n  const gotToRestaurant = () => {\n    props.history.push(`/restaurant/${url}`);\n  };\n\n  return (\n    <div className='restaurant_select'>\n      <div className='restaurant_select_top'>\n        <div\n          onClick={displayList}\n          className='restaurant_select_top-header font-effect-outline'\n        >\n          {title ? title : 'Выбери ресторан'}\n        </div>\n        <div className='arrow_picker'>\n          <div className='arrow_picker-up'></div>\n          <div className='arrow_picker-down'></div>\n        </div>\n      </div>\n\n      {display ? (\n        <div className='restaurant_select_bottom'>\n          <ul>\n            {restaurants.map(restaurant => {\n              return (\n                <li onClick={() => getTitle(restaurant)} key={restaurant.id}>\n                  {restaurant.title}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      ) : null}\n\n      {title && !display ? (\n        <button onClick={gotToRestaurant}>Перейти в ресторан</button>\n      ) : null}\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  history: PropTypes.object\n};\n\nexport default Landing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className='top'>\n    <div className='wrap'>\n      <div className='header-content'>\n        <div className='header-rating'>\n          <div className='header-rating_tag'>Рейтинг: </div>\n          <div className='header-rating_icon'>★★★★★</div>\n        </div>\n\n        <div className='header-divider'></div>\n        <h1 className='font-effect-fire-animation'>{props.title}</h1>\n        <h3>\n          <span>\n            Быстрая доставка горячих\n            <span className='sub-header'> #бургеров</span>\n          </span>\n        </h3>\n      </div>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Shipment extends React.Component {\n  static propTypes = {\n    total: PropTypes.number\n  };\n\n  render() {\n    const { total } = this.props;\n    const shipping = total > 0 && total < 500 ? 350 : 99;\n    const shippingNeon =\n      shipping === 99 ? (\n        <span className='font-effect-neon total_wrap-cheap'>{shipping} ₽</span>\n      ) : (\n        <span>{shipping} ₽</span>\n      );\n\n    return (\n      <div className='total'>\n        <div className='total_wrap'>\n          <div>\n            <div>Доставка: {total > 0 ? shippingNeon : null}</div>\n            <div className='total_wrap-free'>\n              {total < 500\n                ? `Закажите еще на ${500 - total} ₽ для доставки за 99 ₽`\n                : null}\n            </div>\n          </div>\n\n          <div className='total_wrap-final'>Итого: {total} ₽</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shipment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Shipment from './Shipment';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n  static propTypes = {\n    burgers: PropTypes.object,\n    order: PropTypes.object,\n    deleteFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n    const isAvailable = burger && burger.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    if (!burger) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li className='unavailable' key={key}>\n            Извините, {burger ? burger.name : 'бургер'} временно недоступен\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component='span' className='count'>\n              <CSSTransition\n                classNames='count'\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            шт. {burger.name}\n            <span> {count * burger.price} ₽</span>\n            <button\n              onClick={() => this.props.deleteFromOrder(key)}\n              className='cancellItem'\n            >\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status === 'available';\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className='order-wrap'>\n        <h2>Ваш Заказ</h2>\n\n        <TransitionGroup component='ul' className='order'>\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n\n        {total > 0 ? (\n          <Shipment total={total} />\n        ) : (\n          <div className='nothingSelected'>\n            Выберите блюда и добавьте к заказу\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddBurgerForm extends React.Component {\n  static propTypes = {\n    addBurger: PropTypes.func\n  };\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createBurger = event => {\n    event.preventDefault();\n    const burger = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value || 0),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addBurger(burger);\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className='burger-edit' onSubmit={this.createBurger}>\n        <input\n          ref={this.nameRef}\n          name='name'\n          type='text'\n          placeholder='Name'\n          autoComplete='off'\n        />\n        <input\n          ref={this.priceRef}\n          name='price'\n          type='text'\n          placeholder='Price'\n          autoComplete='off'\n        />\n        <select ref={this.statusRef} name='status' className='status'>\n          <option value='available'>Доступно</option>\n          <option value='unavailable'>Убрать из меню</option>\n        </select>\n        <textarea ref={this.descRef} name='desc' placeholder='Desc' />\n        <input\n          ref={this.imageRef}\n          name='image'\n          type='text'\n          placeholder='Image'\n          autoComplete='off'\n        />\n        <button type='submit'>+ Добавить в Меню</button>\n      </form>\n    );\n  }\n}\nexport default AddBurgerForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditBurgerForm extends React.Component {\n  static propTypes = {\n    burger: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string\n    }),\n    index: PropTypes.string,\n    updateBurger: PropTypes.func,\n    deleteBurger: PropTypes.func\n  };\n\n  handleChange = event => {\n    const updatedBurger = {\n      ...this.props.burger,\n      [event.currentTarget.name]:\n        event.currentTarget.name === 'price'\n          ? parseFloat(event.currentTarget.value) || 0\n          : event.currentTarget.value\n    };\n    this.props.updateBurger(this.props.index, updatedBurger);\n  };\n\n  render() {\n    return (\n      <div className='burger-edit'>\n        <input\n          onChange={this.handleChange}\n          name='name'\n          type='text'\n          value={this.props.burger.name}\n        />\n        <input\n          onChange={this.handleChange}\n          name='price'\n          type='text'\n          value={this.props.burger.price}\n        />\n        <select\n          onChange={this.handleChange}\n          name='status'\n          className='status'\n          value={this.props.burger.status}\n        >\n          <option value='available'>Доступно!</option>\n          <option value='unavailable'>Не доступно!</option>\n        </select>\n        <textarea\n          onChange={this.handleChange}\n          name='desc'\n          value={this.props.burger.desc}\n        />\n        <input\n          onChange={this.handleChange}\n          name='image'\n          type='text'\n          value={this.props.burger.image}\n        />\n        <button onClick={() => this.props.deleteBurger(this.props.index)}>\n          Удалить из меню\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditBurgerForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddBurgerForm from './AddBurgerForm';\nimport EditBurgerForm from './EditBurgerForm';\nimport firebase from 'firebase/app';\n\nclass MenuAdmin extends React.Component {\n  state = {\n    photo: '',\n    user: ''\n  };\n\n  static propTypes = {\n    burgers: PropTypes.object,\n    deleteBurger: PropTypes.func,\n    updateBurger: PropTypes.func,\n    addBurger: PropTypes.func,\n    loadSampleBurgers: PropTypes.func\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    const { email, photoURL } = authData.user;\n    this.setState({ user: email, photo: photoURL });\n  };\n\n  render() {\n    const { user, photo } = this.state;\n    const avatar = photo ? photo : '/images/avatar.png';\n    return (\n      <div className='menu-admin'>\n        {user ? (\n          <div className='login-header'>\n            <div className='avatar'>\n              <img src={avatar} alt={user} />\n            </div>\n            <button className='buttonLogout' onClick={this.props.handleLogout}>\n              Выйти\n            </button>\n          </div>\n        ) : null}\n        <h2>Управление Меню</h2>\n        {Object.keys(this.props.burgers).map(key => {\n          return (\n            <EditBurgerForm\n              key={key}\n              index={key}\n              deleteBurger={this.props.deleteBurger}\n              updateBurger={this.props.updateBurger}\n              burger={this.props.burgers[key]}\n            />\n          );\n        })}\n        <AddBurgerForm addBurger={this.props.addBurger} />\n        <button onClick={this.props.loadSampleBurgers}>\n          Загрузить бургеры\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default MenuAdmin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Burger extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string\n    }),\n    index: PropTypes.string,\n    addToOrder: PropTypes.func\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className='menu-burger'>\n        <div className='image-container'>\n          <img src={image} alt={name} />\n        </div>\n\n        <div className='burger-details'>\n          <h3 className='burger-name'>\n            {name}\n            <span className='price'>{price} ₽</span>\n          </h3>\n          <p>{desc}</p>\n          <button\n            className='buttonOrder'\n            disabled={!isAvailable}\n            onClick={() => this.props.addToOrder(this.props.index)}\n          >\n            {isAvailable ? 'Заказать' : 'Временно нет'}\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Burger;\n","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: 'Чизбургер',\n    image: '/images/cheese.jpg',\n    desc:\n      'Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.',\n    price: 110,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Чикенбургер',\n    image: '/images/chicken.jpg',\n    desc:\n      'Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.',\n    price: 140,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Двойной Гамбургер',\n    image: '/images/double.jpg',\n    desc:\n      'Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.',\n    price: 200,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Фишбургер',\n    image: '/images/fish.jpg',\n    desc:\n      'Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.',\n    price: 150,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'Картофель Фри',\n    image: '/images/fries.jpg',\n    desc:\n      'Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!',\n    price: 85,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Бургер',\n    image: '/images/ham.jpg',\n    desc:\n      'Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.',\n    price: 450,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Мега Бургер',\n    image: '/images/mega.jpg',\n    desc:\n      'Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.',\n    price: 500,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Бургер в Пите',\n    image: '/images/pita.jpg',\n    desc:\n      'Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.',\n    price: 380,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Фри',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями',\n    price: 90,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'xxxxxxx',\n  authDomain: 'xxxxxxxxx',\n  databaseURL: 'xxxxxxxxxxxxxx',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => {\n  return (\n    <div className='login-container'>\n      <nav className='login'>\n        <h2>Авторизация</h2>\n        <p>Введите логин и пароль вашего эккаунта Github</p>\n        <button className='github' onClick={() => props.authenticate()}>\n          Войти\n        </button>\n      </nav>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import React from 'react';\nimport Login from './Login';\nimport firebase from 'firebase/app';\nimport { firebaseApp } from '../../base';\n\nclass SignIn extends React.Component {\n  state = {\n    user: ''\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    const { email } = authData.user;\n    this.setState({ user: email });\n  };\n\n  authenticate = () => {\n    const authProvider = new firebase.auth['GithubAuthProvider']();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  render() {\n    if (!this.state.user) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default SignIn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport Burger from './Burger';\nimport sampleBurgers from '../sample-burgers';\nimport base from '../base';\nimport firebase from 'firebase/app';\nimport SignIn from './Auth/SignIn';\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  state = {\n    burgers: {},\n    order: {}\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: 'burgers'\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addBurger = burger => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в переменную burgers\n    burgers[`burger${Date.now()}`] = burger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  updateBurger = (key, updatedBurger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Обновляем нужный burger\n    burgers[key] = updatedBurger;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  deleteBurger = key => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Удаляем burger\n    burgers[key] = null;\n    // 3. Записать наш новый объект burgers в state\n    this.setState({ burgers });\n  };\n\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n\n  addToOrder = key => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Добавить ключ к заказу со знач-ем 1, либо обновить текущ. знач.\n    order[key] = order[key] + 1 || 1;\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  deleteFromOrder = key => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Удаляем burger\n    delete order[key];\n    // 3. Записать наш новый объект order в state\n    this.setState({ order });\n  };\n\n  handleLogout = async () => {\n    await firebase.auth().signOut();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <SignIn>\n        <div className='burger-paradise'>\n          <div className='menu'>\n            <Header title='Hot Burgers' />\n            <ul className='burgers'>\n              {Object.keys(this.state.burgers).map(key => {\n                return (\n                  <Burger\n                    key={key}\n                    index={key}\n                    addToOrder={this.addToOrder}\n                    details={this.state.burgers[key]}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <Order\n            deleteFromOrder={this.deleteFromOrder}\n            burgers={this.state.burgers}\n            order={this.state.order}\n          />\n          <MenuAdmin\n            addBurger={this.addBurger}\n            loadSampleBurgers={this.loadSampleBurgers}\n            burgers={this.state.burgers}\n            updateBurger={this.updateBurger}\n            deleteBurger={this.deleteBurger}\n            handleLogout={this.handleLogout}\n          />\n        </div>\n      </SignIn>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h2>The Page is Not Found</h2>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport Landing from './Landing';\nimport App from './App';\nimport NotFound from './NotFound';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route path='/restaurant/:restaurantId' component={App} />\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#root'));\n"],"sourceRoot":""}